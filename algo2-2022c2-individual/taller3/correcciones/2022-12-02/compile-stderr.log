In file included from ./string_map.h:99,
                 from ../../../../../taller3/string_map_tests.cpp:2:
./string_map.hpp: In instantiation of ‘int string_map<T>::count(const string&) const [with T = int; std::string = std::__cxx11::basic_string<char>]’:
../../../../../taller3/string_map_tests.cpp:8:5:   required from here
./string_map.hpp:78:72: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   78 |     while((actual->siguientes)[int (clave[i])] != nullptr && !res && i < clave.size()){
      |                                                                      ~~^~~~~~~~~~~~~~
./string_map.hpp:80:16: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   80 |         if ( i == clave.size()-1 && actual->definicion != nullptr){
      |              ~~^~~~~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘void string_map<T>::insert(const std::pair<std::__cxx11::basic_string<char>, T>&) [with T = int]’:
../../../../../taller3/string_map_tests.cpp:13:42:   required from here
./string_map.hpp:157:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  157 |     for (int i = 0; i < aInsertar.first.size() ; ++i) {
./string_map.hpp:160:89: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  160 |             if (actual->siguientes[int(aInsertar.first[i])]->definicion != nullptr && i == aInsertar.first.size()-1){
      |                                                                                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./string_map.hpp:168:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  168 |             if (i==aInsertar.first.size() -1){ //al ultimo elemento de la palabra lo inserto con la definicion
      |                 ~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘T& string_map<T>::at(const string&) [with T = int; std::string = std::__cxx11::basic_string<char>]’:
../../../../../taller3/string_map_tests.cpp:15:5:   required from here
./string_map.hpp:105:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  105 |     for (int i = 0; i < clave.size(); ++i) {
      |                     ~~^~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘void string_map<T>::insert(const std::pair<std::__cxx11::basic_string<char>, T>&) [with T = string_map<int>]’:
../../../../../taller3/string_map_tests.cpp:153:48:   required from here
./string_map.hpp:157:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  157 |     for (int i = 0; i < aInsertar.first.size() ; ++i) {
./string_map.hpp:160:89: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  160 |             if (actual->siguientes[int(aInsertar.first[i])]->definicion != nullptr && i == aInsertar.first.size()-1){
      |                                                                                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./string_map.hpp:168:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  168 |             if (i==aInsertar.first.size() -1){ //al ultimo elemento de la palabra lo inserto con la definicion
      |                 ~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘T& string_map<T>::at(const string&) [with T = string_map<int>; std::string = std::__cxx11::basic_string<char>]’:
../../../../../taller3/string_map_tests.cpp:158:2:   required from here
./string_map.hpp:105:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  105 |     for (int i = 0; i < clave.size(); ++i) {
      |                     ~~^~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘void string_map<T>::erase(const string&) [with T = int; std::string = std::__cxx11::basic_string<char>]’:
../../../../../taller3/string_map_tests.cpp:178:27:   required from here
./string_map.hpp:118:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |     for (int i = 0; i < clave.size(); ++i) {
      |                     ~~^~~~~~~~~~~~~~
./string_map.hpp:128:13: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<string_map<int>::Nodo*, std::allocator<string_map<int>::Nodo*> >::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  128 |         if(i<aBorrar.size()-1 && aBorrar[i]->definicion != nullptr ) {
      |            ~^~~~~~~~~~~~~~~~~
./string_map.hpp: In instantiation of ‘void string_map<T>::copiaDeTrie(string_map<T>::Nodo*, string_map<T>::Nodo*) [with T = int]’:
./string_map.hpp:20:9:   required from ‘string_map<T>& string_map<T>::operator=(const string_map<T>&) [with T = int]’
./string_map.hpp:10:80:   required from ‘string_map<T>::string_map(const string_map<T>&) [with T = int]’
../../../../../taller3/string_map_tests.cpp:98:39:   required from here
./string_map.hpp:26:22: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<string_map<int>::Nodo*, std::allocator<string_map<int>::Nodo*> >::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   26 |     for (int i = 0; i< original->siguientes.size();i++) {
